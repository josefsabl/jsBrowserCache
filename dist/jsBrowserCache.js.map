{"version":3,"sources":["../src/jsBrowserCache.js"],"names":["JsBrowserCache","options","_options","prefix","_seconds","testSupportsStorage","key","value","_supportsStorage","undefined","localStorage","ex","_setItem","_removeItem","e","_IsExceptionOutOfSpace","length","expiration","record","actualTimeStamp","Date","getTime","isSupportsStorage","_jsonToString","create","expire","_getItem","_stringToJson","keys","Object","filter","v","startsWith","i","replace","setItem","getItem","removeItem","json","JSON","stringify","string","parse","name"],"mappings":"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","file":"jsBrowserCache.js","sourcesContent":["\"use strict\";\r\n/**\r\n * JsBrowserCache\r\n */\r\nclass JsBrowserCache {\r\n    \r\n    /**\r\n     * konstruktor\r\n     * @param {object} options nastaveni \r\n     */\r\n    constructor(options) {\r\n        console.info('Creat object JsBrowserCache');\r\n\r\n        this._options = Object.assign({}, {\r\n            prefix : 'mafra-',\r\n\r\n        }, options || {});\r\n\r\n        this._seconds = 1*1000;\r\n\r\n        //otestuji podporu storage\r\n        return this.testSupportsStorage()\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    testSupportsStorage() {\r\n        let key = 'j8EiBTWwQV',\r\n            value = key;\r\n\r\n        //pokud jsem jiz testival, tak nemusim znova\r\n        if (this._supportsStorage !== undefined) {\r\n            return this._supportsStorage;\r\n        }\r\n        \r\n        //otestuji localStorage\r\n        try {\r\n            if (!localStorage) {\r\n                return false;\r\n            }\r\n        } catch (ex) {\r\n            return false;\r\n        }         \r\n    \r\n        try {\r\n            this._setItem(key, value);\r\n            this._removeItem(key);\r\n            this._supportsStorage = true; //pokud projde zapis a cteni nastim podporu na true\r\n        } catch (e) {\r\n            console.warn(e);\r\n            //otestuji jestli neni storage plna\r\n            if (this._IsExceptionOutOfSpace(e) && localStorage.length) {\r\n                this._supportsStorage  = true;\r\n            } else {\r\n                this._supportsStorage  = false;\r\n            }\r\n        }\r\n        return this._supportsStorage; //zde si budu ukladat informaci jestli je cache podporovaná*/\r\n    }\r\n\r\n    isSupportsStorage() {\r\n        if (!this._supportsStorage) {\r\n            console.warn('Browser does not support local storage');\r\n        }\r\n        return this._supportsStorage || false;\r\n    }\r\n    \r\n    setItem(key, value, expiration) {\r\n        let record,\r\n            actualTimeStamp = new Date().getTime();\r\n        \r\n        //otestuji jestli je podporovana local storage\r\n        if(!this.isSupportsStorage()) {\r\n            return false;\r\n        }\r\n\r\n        console.info('Actual time stamp: ' + actualTimeStamp);\r\n        console.info('Expire: ' + (expiration ? actualTimeStamp + expiration*1*this._seconds : ''));\r\n\r\n        record = {\r\n            value: this._jsonToString(value),\r\n            create: actualTimeStamp,\r\n            expire: expiration ? actualTimeStamp + expiration*1*this._seconds : ''\r\n        }\r\n\r\n        console.info('record');\r\n\r\n        this._removeItem(key);\r\n        this._setItem(key, this._jsonToString(record));\r\n    }\r\n\r\n    getItem(key) {\r\n        let record;\r\n    \r\n        //otestuji jestli je podporovana local storage\r\n        if(!this.isSupportsStorage()) {\r\n            return null;\r\n        }\r\n\r\n        record = this._getItem(key);\r\n\r\n        console.info(record);\r\n\r\n        //zjistim jestli polozka existuje\r\n        if(!record) {\r\n            return null;\r\n        }\r\n\r\n        record = this._stringToJson(record);\r\n\r\n        console.info(record);\r\n\r\n        //otestuji jestli je polozka expirovana\r\n        if(record.expire && new Date().getTime() > record.expire) {\r\n            console.log('Item \"' + key + '\" is expired. Item is removed.');\r\n            this._removeItem(key);\r\n            return null;\r\n        } else {\r\n            return this._stringToJson(record.value);\r\n        }       \r\n    }\r\n\r\n    clearExpirate() {\r\n        let keys;\r\n        \r\n        //otestuji jestli je podporovana local storage\r\n        if(!this.isSupportsStorage()) {\r\n            return null;\r\n        }\r\n\r\n        if (localStorage.length > 0) {\r\n            keys = Object.keys(localStorage).filter( v => v.startsWith(this._options.prefix) ); //ziskam vsechny klice ktere odpovidaji prefixu\r\n\r\n            if (keys.length > 0) {\r\n                for (let i = 0, length = keys.length; i < length; i++){\r\n                    let key = keys[i].replace(this._options.prefix,''), //odeberu u klice prefix\r\n                        record = this._stringToJson(this._getItem(key)); \r\n\r\n                    //otestuji jestli je to klic s prefixem\r\n                    if(record.expire && new Date().getTime() > record.expire) {\r\n                        console.info('Item \"' + key + '\" is expired. Item is removed.'); \r\n                        this._removeItem(key);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /*clearOlder(time) {\r\n\r\n    }*/\r\n\r\n    /*clearAll() {\r\n\r\n    }*/\r\n\r\n    //private Method\r\n\r\n    _setItem(key, value) {\r\n        localStorage.setItem(this._options.prefix + key, value);\r\n    }\r\n\r\n    _getItem(key) {\r\n        return localStorage.getItem(this._options.prefix + key);\r\n    }\r\n\r\n    _removeItem(key) {\r\n        return localStorage.removeItem(this._options.prefix + key);\r\n    }\r\n\r\n    _jsonToString(json) {\r\n        return JSON.stringify(json);\r\n    }\r\n\r\n    _stringToJson(string) {\r\n        return JSON.parse(string);\r\n    }\r\n\r\n    /**\r\n     * otestuje jestli je vyvolaná vyjímka na plný storge\r\n     * @param {object} e exception\r\n     * @returns {bool}\r\n     */\r\n    _IsExceptionOutOfSpace(e) {\r\n        return (e && e.name === 'QUOTA_EXCEEDED_ERR' ||\r\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED' ||\r\n            e.name === 'QuotaExceededError');\r\n    }\r\n}"]}